import { Lecture } from "@/types";

export const htmlTagsDeepDiveLecture: Lecture = {
  id: "html-tags-deep-dive",
  title: "Основы HTML: Изучение тегов и структуры документа",
  description:
    "Комплексное изучение HTML тегов с подробными примерами и практическими заданиями. Курс охватывает все основные элементы HTML, необходимые для создания современных веб-страниц.",
  groupId: "user-interfaces",
  createdAt: new Date("2025-09-13"),
  updatedAt: new Date("2025-09-13"),
  tags: [
    "user-interfaces",
    "основы",
    "теги",
    "веб-разработка",
    "разметка",
    "структура",
  ],
  difficulty: "beginner",
  duration: 4.5,

  slides: [
    {
      id: "slide-1",
      title: "Основы HTML: Изучение тегов и структуры документа",
      type: "title",
      content:
        "Комплексное изучение HTML тегов для создания современных веб-страниц",
      keyPoints: [
        {
          title: "Понятие HTML и его роль",
          description: "Изучение основ языка разметки гипертекста",
        },
        {
          title: "Структура HTML документа",
          description: "Правильная организация элементов на веб-странице",
        },
        {
          title: "Основные HTML теги",
          description: "Подробное изучение всех необходимых элементов",
        },
        {
          title: "Практическое применение",
          description:
            "Создание полноценных веб-страниц с использованием изученных тегов",
        },
      ],
    },

    {
      id: "slide-2",
      title: "Введение в HTML",
      type: "content",
      content:
        "HTML (HyperText Markup Language) представляет собой стандартный язык разметки для создания веб-страниц. HTML описывает структуру веб-страницы семантически и первоначально включал указания для внешнего вида документа.\n\nHTML элементы являются строительными блоками HTML страниц. С помощью HTML конструкций, изображения и другие объекты, такие как интерактивные формы, могут быть встроены в отображаемую страницу. HTML предоставляет средства для создания структурированных документов путем обозначения структурной семантики для текста.",
    },

    {
      id: "slide-3",
      title: "История и развитие HTML",
      type: "content",
      content:
        "HTML был создан в 1990 году Тимом Бернерсом-Ли в CERN. Первая версия HTML содержала всего 18 элементов. За годы развития HTML прошел через множество версий:\n\n• HTML 1.0 (1993) - первая официальная версия\n• HTML 2.0 (1995) - стандартизация существующих возможностей\n• HTML 3.2 (1997) - добавление таблиц и апплетов\n• HTML 4.01 (1999) - разделение содержания и представления\n• XHTML (2000) - переформулировка HTML в XML\n• HTML5 (2014) - современный стандарт с новыми семантическими элементами",
    },

    {
      id: "slide-4",
      title: "Синтаксис HTML",
      type: "code",
      content:
        "HTML использует систему тегов для определения структуры и содержания документа. Теги заключены в угловые скобки и обычно идут парами.",
      codeExample: {
        language: "html",
        title: "Основы синтаксиса HTML",
        code: `<!-- Парные теги -->
<тагname>содержимое</тагname>

<!-- Одиночные теги -->
<тагname />

<!-- Теги с атрибутами -->
<тагname атрибут="значение">содержимое</тагname>

<!-- Вложенные теги -->
<родительский-тег>
    <дочерний-тег>содержимое</дочерний-тег>
</родительский-тег>

<!-- Комментарии -->
<!-- Это комментарий, который не отображается в браузере -->`,
      },
    },

    {
      id: "slide-5",
      title: "Структура HTML документа",
      type: "code",
      content:
        "Каждый HTML документ имеет определенную структуру, которая включает обязательные элементы для корректной работы в браузере.",
      codeExample: {
        language: "html",
        title: "Базовая структура HTML документа",
        code: `<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Заголовок документа</title>
</head>
<body>
    <!-- Содержимое страницы -->
</body>
</html>`,
      },
    },

    {
      id: "slide-6",
      title: "Объявление типа документа DOCTYPE",
      type: "content",
      content:
        'Объявление DOCTYPE информирует браузер о том, какую версию HTML использует документ. В HTML5 используется упрощенное объявление DOCTYPE.\n\nОбъявление DOCTYPE должно быть самым первым элементом в HTML документе, даже перед тегом <html>. DOCTYPE не является HTML тегом; это инструкция веб-браузеру о том, в какой версии HTML написана страница.\n\nВ HTML5: <!DOCTYPE html>\nВ HTML 4.01: <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">',
    },

    {
      id: "slide-7",
      title: "Элемент html",
      type: "code",
      content:
        "Элемент <html> является корневым элементом HTML документа и содержит все остальные элементы страницы.",
      codeExample: {
        language: "html",
        title: "Использование элемента html",
        code: `<!DOCTYPE html>
<html lang="ru">
    <!-- Весь контент документа -->
</html>

<!-- Атрибут lang указывает язык документа -->
<html lang="en">    <!-- английский -->
<html lang="fr">    <!-- французский -->
<html lang="de">    <!-- немецкий -->

<!-- Можно указать направление текста -->
<html lang="ar" dir="rtl">  <!-- арабский, справа налево -->`,
      },
    },

    {
      id: "slide-8",
      title: "Элемент head - метаданные документа",
      type: "content",
      content:
        "Элемент <head> содержит метаданные о HTML документе. Метаданные - это данные о данных, которые не отображаются на странице, но используются браузерами, поисковыми системами и другими веб-службами.\n\nВ разделе head могут находиться следующие элементы:\n• <title> - заголовок документа\n• <meta> - метаданные\n• <link> - ссылки на внешние ресурсы\n• <style> - внутренние стили CSS\n• <script> - скрипты JavaScript\n• <base> - базовый URL для относительных ссылок",
    },

    {
      id: "slide-9",
      title: "Элемент title",
      type: "code",
      content:
        "Элемент <title> определяет заголовок документа, который отображается в заголовке браузера или на вкладке страницы.",
      codeExample: {
        language: "html",
        title: "Использование элемента title",
        code: `<head>
    <title>Главная страница - Мой сайт</title>
</head>

<!-- Примеры хороших заголовков -->
<title>О компании - Веб-студия Пример</title>
<title>Контакты | Интернет-магазин товаров</title>
<title>Статья: Основы HTML - Блог разработчика</title>

<!-- Длина заголовка должна быть 50-60 символов для SEO -->`,
      },
    },

    {
      id: "slide-10",
      title: "Мета-теги",
      type: "code",
      content:
        "Мета-теги предоставляют метаданные о HTML документе. Они не отображаются на странице, но используются браузерами и поисковыми системами.",
      codeExample: {
        language: "html",
        title: "Основные мета-теги",
        code: `<head>
    <!-- Кодировка символов -->
    <meta charset="UTF-8">
    
    <!-- Настройки viewport для мобильных устройств -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <!-- Описание страницы для поисковых систем -->
    <meta name="description" content="Описание страницы до 160 символов">
    
    <!-- Ключевые слова (редко используется) -->
    <meta name="keywords" content="html, css, javascript, веб-разработка">
    
    <!-- Автор страницы -->
    <meta name="author" content="Имя Автора">
    
    <!-- Запрет индексации поисковыми системами -->
    <meta name="robots" content="noindex, nofollow">
</head>`,
      },
    },

    {
      id: "slide-11",
      title: "Элемент body",
      type: "content",
      content:
        "Элемент <body> содержит весь видимый контент HTML документа, такой как заголовки, параграфы, изображения, гиперссылки, таблицы, списки и т.д.\n\nВ HTML документе может быть только один элемент <body>. Элемент body поддерживает все глобальные атрибуты HTML.\n\nВсе содержимое, которое должно отображаться на веб-странице, должно находиться внутри элемента body. Это включает текст, изображения, видео, игры, воспроизводимые аудиофайлы или что-либо еще.",
    },

    {
      id: "slide-12",
      title: "Заголовки h1-h6",
      type: "code",
      content:
        "HTML предоставляет шесть уровней заголовков, от h1 (самый важный) до h6 (наименее важный). Заголовки используются для создания иерархической структуры контента.",
      codeExample: {
        language: "html",
        title: "Иерархия заголовков",
        code: `<h1>Главный заголовок страницы</h1>
<h2>Заголовок раздела</h2>
<h3>Подзаголовок раздела</h3>
<h4>Заголовок подраздела</h4>
<h5>Заголовок пятого уровня</h5>
<h6>Заголовок шестого уровня</h6>

<!-- Пример правильной иерархии -->
<h1>Веб-разработка</h1>
    <h2>Frontend разработка</h2>
        <h3>HTML</h3>
        <h3>CSS</h3>
        <h3>JavaScript</h3>
    <h2>Backend разработка</h2>
        <h3>Node.js</h3>
        <h3>Python</h3>`,
      },
    },

    {
      id: "slide-13",
      title: "Назначение заголовков h1-h6",
      type: "content",
      content:
        "Каждый уровень заголовков имеет свое специфическое назначение в документе:\n\n**h1 - Главный заголовок страницы**\nИспользуется для основной темы страницы. На странице должен быть только один h1. Это самый важный заголовок для SEO и веб-доступности.\n\n**h2 - Основные разделы**\nОписывает главные разделы контента. Например: 'Введение', 'Основная часть', 'Заключение'.\n\n**h3 - Подразделы**\nДелит содержимое h2 на более мелкие части. Например, в разделе 'Технологии' можно использовать h3 для 'Фронтенд', 'Бэкенд'.\n\n**h4-h6 - Дальнейшая детализация**\nИспользуются для еще более мелкого деления контента. h4 чаще всего достаточно для большинства документов.",
    },

    {
      id: "slide-14",
      title: "Правила использования заголовков",
      type: "list",
      content: "Основные принципы работы с заголовками в HTML:",
      items: [
        "Используйте только один h1 на странице - это главный заголовок",
        "Следуйте иерархической структуре - не пропускайте уровни",
        "h1 должен описывать основную тему страницы",
        "h2 используется для основных разделов страницы",
        "h3-h6 для подразделов соответствующих уровней",
        "Заголовки должны быть информативными и описательными",
        "Не используйте заголовки только для изменения размера шрифта",
        "Заголовки важны для SEO и доступности",
      ],
    },

    {
      id: "slide-15",
      title: "Элемент p - параграфы",
      type: "code",
      content:
        "Элемент <p> представляет параграф текста. Параграфы являются блочными элементами и автоматически создают отступы до и после себя.",
      codeExample: {
        language: "html",
        title: "Использование параграфов",
        code: `<p>Это первый параграф текста. Элемент p автоматически 
   добавляет отступы сверху и снизу.</p>

<p>Это второй параграф. Между параграфами браузер 
   автоматически создает вертикальное расстояние.</p>

<!-- Параграф может содержать встроенные элементы -->
<p>Этот параграф содержит <strong>жирный текст</strong> 
   и <em>курсивный текст</em>, а также 
   <a href="#link">ссылку</a>.</p>

<!-- Несколько предложений в одном параграфе -->
<p>Первое предложение параграфа. Второе предложение 
   того же параграфа. Третье предложение.</p>`,
      },
    },

    {
      id: "slide-16",
      title: "Назначение и особенности элемента p",
      type: "content",
      content:
        "Элемент <p> предназначен для обозначения параграфов текста и имеет важные семантические и технические особенности:\n\n**Семантическое назначение:**\n• Обозначает связанную группу предложений\n• Логически отделяет один блок мысли от другого\n• Помогает структурировать контент для читателей и поисковых систем\n\n**Технические особенности:**\n• Блочный элемент - занимает всю доступную ширину\n• Автоматические отступы сверху и снизу (margin)\n• Не может содержать другие блочные элементы\n• Может содержать только inline элементы и текст\n\n**Когда использовать:**\n• Для обычного текстового контента\n• Для описаний и объяснений\n• Для группировки связанных предложений",
    },

    {
      id: "slide-17",
      title: "Назначение элементов форматирования текста",
      type: "content",
      content:
        "HTML элементы форматирования делятся на две категории: семантические и визуальные.\n\n**Семантические элементы (рекомендуется):**\n• **<strong>** - обозначает важность содержимого\n• **<em>** - обозначает эмфазу, ударение в речи\n• **<mark>** - выделяет текст как релевантный в текущем контексте\n• **<small>** - для сносок, копирайтов, мелкого шрифта\n• **<del>** - показывает удаленный из документа текст\n• **<ins>** - показывает добавленный в документ текст\n• **<sub>** - подстрочный индекс (химические формулы)\n• **<sup>** - надстрочный индекс (степени, сноски)\n\n**Визуальные элементы:**\n• **<b>** - жирный шрифт без семантического значения\n• **<i>** - курсив без семантического значения\n• **<u>** - подчеркивание\n• **<s>** - зачеркивание",
    },

    {
      id: "slide-18",
      title: "Элементы форматирования текста",
      type: "code",
      content:
        "HTML предоставляет различные элементы для форматирования текста. Важно понимать разницу между семантическими и визуальными элементами.",
      codeExample: {
        language: "html",
        title: "Форматирование текста",
        code: `<!-- Семантические элементы (предпочтительно) -->
<strong>Важный текст (семантически важный)</strong>
<em>Подчеркнутый текст (эмфаза)</em>
<mark>Выделенный текст (как маркером)</mark>
<small>Мелкий шрифт (сноска, копирайт)</small>
<del>Удаленный текст</del>
<ins>Вставленный текст</ins>
<sub>Нижний индекс H<sub>2</sub>O</sub>
<sup>Верхний индекс E=mc<sup>2</sup></sup>

<!-- Визуальные элементы -->
<b>Жирный текст (только внешний вид)</b>
<i>Курсивный текст (только внешний вид)</i>
<u>Подчеркнутый текст</u>
<s>Зачеркнутый текст</s>`,
      },
    },

    {
      id: "slide-19",
      title: "Назначение специальных текстовых элементов",
      type: "content",
      content:
        "HTML предоставляет специализированные элементы для разных типов текстового контента:\n\n**Элементы для кода и программирования:**\n• **<code>** - фрагменты кода внутри текста\n• **<pre>** - предварительно отформатированный текст (сохраняет пробелы и переносы)\n• **<kbd>** - ввод с клавиатуры (названия клавиш)\n• **<samp>** - пример вывода программы\n• **<var>** - переменные в математических выражениях или программах\n\n**Элементы для цитирования:**\n• **<blockquote>** - длинная цитата (блочная)\n• **<q>** - короткая цитата (строчная)\n• **<cite>** - ссылка на источник\n\n**Информационные элементы:**\n• **<abbr>** - аббревиатуры и сокращения\n• **<dfn>** - определяющий экземпляр термина\n• **<time>** - дата и время",
    },

    {
      id: "slide-20",
      title: "Специальные текстовые элементы",
      type: "code",
      content:
        "HTML включает специальные элементы для различных типов текстового контента.",
      codeExample: {
        language: "html",
        title: "Специальные текстовые элементы",
        code: `<!-- Код и программирование -->
<code>console.log('Hello World');</code>
<pre>
function example() {
    return "Предварительно отформатированный текст";
}
</pre>
<kbd>Ctrl+C</kbd> <!-- Клавиши клавиатуры -->
<samp>Пример вывода программы</samp>
<var>x = y + z</var> <!-- Переменные -->

<!-- Цитаты -->
<blockquote cite="https://example.com">
    Длинная цитата, которая выделяется отступами.
</blockquote>
<q>Короткая цитата в кавычках</q>

<!-- Аббревиатуры -->
<abbr title="HyperText Markup Language">HTML</abbr>

<!-- Определения -->
<dfn>HTML</dfn> - язык разметки гипертекста.`,
      },
    },

    {
      id: "slide-21",
      title: "Назначение элементов br и hr",
      type: "content",
      content:
        "Элементы <br> и <hr> служат для управления структурой и визуальным разделением контента:\n\n**Элемент <br> (line break):**\n• Принудительный перенос строки\n• Используется внутри блоков текста\n• Не создает новый параграф\n• Полезен для адресов, стихов, коротких строк\n• Не злоупотребляйте - для отступов используйте CSS\n\n**Элемент <hr> (horizontal rule):**\n• Горизонтальная разделительная линия\n• Обозначает тематическое разделение контента\n• Блочный элемент\n• Семантически означает смену темы\n• Используется между разделами, главами\n• Стилизуется через CSS для изменения внешнего вида\n\n**Важно:** Эти элементы являются пустыми (void elements) - у них нет закрывающего тега.",
    },

    {
      id: "slide-22",
      title: "Элементы переноса строки и горизонтальной линии",
      type: "code",
      content:
        "HTML предоставляет элементы для управления переносами строк и создания разделителей.",
      codeExample: {
        language: "html",
        title: "Переносы и разделители",
        code: `<!-- Перенос строки -->
<p>Первая строка<br>Вторая строка<br>Третья строка</p>

<!-- Горизонтальная линия -->
<p>Первый раздел содержимого.</p>
<hr>
<p>Второй раздел содержимого.</p>

<!-- Использование с CSS классами -->
<hr class="section-divider">

<!-- Пример использования в контексте -->
<h2>Глава 1</h2>
<p>Содержимое первой главы...</p>
<hr>
<h2>Глава 2</h2>
<p>Содержимое второй главы...</p>`,
      },
    },

    {
      id: "slide-23",
      title: "Назначение и важность гиперссылок",
      type: "content",
      content:
        "Элемент <a> (якорь/гиперссылка) является основой веба и служит для создания связей между документами:\n\n**Основное назначение:**\n• Навигация между страницами и сайтами\n• Связывание документов в единую сеть\n• Переходы к разделам внутри страницы\n• Инициация действий (звонки, email)\n\n**Типы ссылок:**\n• **Внешние** - на другие сайты\n• **Внутренние** - на страницы того же сайта\n• **Якорные** - на разделы текущей страницы\n• **Протокольные** - mailto:, tel:, ftp:\n• **Файловые** - для скачивания\n\n**Важность для веба:**\n• Основа гипертекста и веба\n• Критически важны для SEO\n• Обеспечивают веб-доступность\n• Позволяют индексировать контент поисковикам",
    },

    {
      id: "slide-24",
      title: "Гиперссылки - элемент a",
      type: "content",
      content:
        "Элемент <a> (якорь) создает гиперссылку на веб-страницы, файлы, адреса электронной почты, местоположения на той же странице или любой другой URL.\n\nАтрибуты элемента a:\n• href - указывает URL ссылки\n• target - определяет, где открыть ссылку\n• title - дополнительная информация о ссылке\n• download - указывает, что ссылка предназначена для загрузки файла\n• rel - отношения между текущим документом и связанным документом",
    },

    {
      id: "slide-19",
      title: "Типы ссылок",
      type: "code",
      content:
        "HTML поддерживает различные типы ссылок для навигации и взаимодействия.",
      codeExample: {
        language: "html",
        title: "Различные типы ссылок",
        code: `<!-- Внешняя ссылка -->
<a href="https://www.example.com">Внешний сайт</a>

<!-- Внутренняя ссылка -->
<a href="about.html">О нас</a>
<a href="../index.html">Главная (относительный путь)</a>

<!-- Якорная ссылка -->
<a href="#section1">Перейти к разделу 1</a>

<!-- Email ссылка -->
<a href="mailto:example@email.com">Отправить письмо</a>
<a href="mailto:user@example.com?subject=Тема&body=Текст письма">
    Письмо с темой и текстом
</a>

<!-- Телефонная ссылка -->
<a href="tel:+1234567890">Позвонить</a>

<!-- Ссылка для скачивания -->
<a href="document.pdf" download>Скачать PDF</a>
<a href="image.jpg" download="новое_имя.jpg">Скачать изображение</a>`,
      },
    },

    {
      id: "slide-20",
      title: "Атрибуты ссылок",
      type: "code",
      content:
        "Дополнительные атрибуты элемента a для управления поведением ссылок.",
      codeExample: {
        language: "html",
        title: "Атрибуты ссылок",
        code: `<!-- Открытие в новом окне/вкладке -->
<a href="https://example.com" target="_blank">Открыть в новой вкладке</a>

<!-- С дополнительной безопасностью -->
<a href="https://example.com" target="_blank" rel="noopener noreferrer">
    Безопасная внешняя ссылка
</a>

<!-- Подсказка при наведении -->
<a href="contact.html" title="Страница с контактной информацией">
    Контакты
</a>

<!-- Отношения между документами -->
<a href="next-page.html" rel="next">Следующая страница</a>
<a href="prev-page.html" rel="prev">Предыдущая страница</a>

<!-- Ссылка без перехода -->
<a href="#" onclick="doSomething(); return false;">Выполнить действие</a>`,
      },
    },

    {
      id: "slide-27",
      title: "Назначение и важность элемента img",
      type: "content",
      content:
        "Элемент <img> предназначен для встраивания изображений в HTML документы и имеет критическое значение для современного веба:\n\n**Основные функции:**\n• Визуальное представление информации\n• Иллюстрация текстового контента\n• Логотипы и брендинг\n• Диаграммы и схемы\n• Декоративные элементы\n\n**Обязательные атрибуты:**\n• **src** - путь к файлу изображения\n• **alt** - альтернативный текст (веб-доступность)\n\n**Важность alt атрибута:**\n• Доступность для программ чтения с экрана\n• Показывается, если изображение не загрузилось\n• Важен для SEO\n• Описывает содержимое изображения\n\n**Современные возможности:**\n• Адаптивные изображения (srcset)\n• Ленивая загрузка (loading='lazy')\n• Оптимизация производительности",
    },

    {
      id: "slide-28",
      title: "Изображения - элемент img",
      type: "content",
      content:
        "Элемент <img> встраивает изображение в документ. Это пустой элемент, что означает, что он не имеет содержимого и не имеет закрывающего тега.\n\nОбязательные атрибуты:\n• src - путь к изображению\n• alt - альтернативный текст для изображения\n\nДополнительные атрибуты:\n• width, height - размеры изображения\n• title - всплывающая подсказка\n• loading - управление загрузкой изображения\n• srcset - набор изображений для разных разрешений",
    },

    {
      id: "slide-22",
      title: "Использование изображений",
      type: "code",
      content:
        "Примеры правильного использования изображений в HTML документах.",
      codeExample: {
        language: "html",
        title: "Работа с изображениями",
        code: `<!-- Базовое изображение -->
<img src="photo.jpg" alt="Описание изображения">

<!-- Изображение с размерами -->
<img src="logo.png" alt="Логотип компании" width="200" height="100">

<!-- Адаптивное изображение -->
<img src="image-large.jpg" 
     srcset="image-small.jpg 480w, 
             image-medium.jpg 800w, 
             image-large.jpg 1200w"
     sizes="(max-width: 480px) 100vw, 
            (max-width: 800px) 50vw, 
            33vw"
     alt="Адаптивное изображение">

<!-- Изображение с ленивой загрузкой -->
<img src="photo.jpg" alt="Фото" loading="lazy">

<!-- Изображение как ссылка -->
<a href="gallery.html">
    <img src="thumbnail.jpg" alt="Открыть галерею">
</a>`,
      },
    },

    {
      id: "slide-30",
      title: "Назначение и типы списков",
      type: "content",
      content:
        "Списки являются фундаментальным способом структурирования информации в HTML:\n\n**Неупорядоченные списки (ul):**\n• Для элементов без определенного порядка\n• Обычно отображаются с маркерами\n• Используются для меню, списков функций, тегов\n• Семантически означают 'набор элементов'\n\n**Упорядоченные списки (ol):**\n• Для элементов с важным порядком следования\n• Нумеруются автоматически\n• Инструкции, рейтинги, шаги алгоритма\n• Семантически означают 'последовательность'\n\n**Списки определений (dl):**\n• Для пар термин-определение\n• Словари, FAQ, описания\n• Структурированные данные\n\n**Преимущества списков:**\n• Улучшают читаемость\n• Важны для веб-доступности\n• Легко стилизуются CSS\n• Поддерживают вложенность",
    },

    {
      id: "slide-31",
      title: "Списки в HTML",
      type: "content",
      content:
        "HTML поддерживает три типа списков:\n\n1. **Неупорядоченные списки (ul)** - для элементов, порядок которых не важен\n2. **Упорядоченные списки (ol)** - для элементов с определенным порядком\n3. **Списки определений (dl)** - для пар термин-определение\n\nКаждый элемент списка заключается в тег <li> (list item). Списки могут быть вложенными друг в друга для создания многоуровневой структуры.",
    },

    {
      id: "slide-24",
      title: "Неупорядоченные и упорядоченные списки",
      type: "code",
      content:
        "Создание различных типов списков для структурирования информации.",
      codeExample: {
        language: "html",
        title: "Типы списков",
        code: `<!-- Неупорядоченный список -->
<ul>
    <li>Первый элемент</li>
    <li>Второй элемент</li>
    <li>Третий элемент</li>
</ul>

<!-- Упорядоченный список -->
<ol>
    <li>Первый шаг</li>
    <li>Второй шаг</li>
    <li>Третий шаг</li>
</ol>

<!-- Упорядоченный список с настройками -->
<ol start="5">
    <li>Пятый элемент</li>
    <li>Шестой элемент</li>
</ol>

<ol type="A">
    <li>Элемент A</li>
    <li>Элемент B</li>
</ol>

<ol type="i">
    <li>элемент i</li>
    <li>элемент ii</li>
</ol>`,
      },
    },

    {
      id: "slide-25",
      title: "Вложенные списки",
      type: "code",
      content: "Создание многоуровневой структуры с помощью вложенных списков.",
      codeExample: {
        language: "html",
        title: "Вложенные списки",
        code: `<ul>
    <li>Фронтенд технологии
        <ul>
            <li>HTML
                <ul>
                    <li>HTML5</li>
                    <li>Семантические элементы</li>
                </ul>
            </li>
            <li>CSS
                <ul>
                    <li>CSS3</li>
                    <li>Flexbox</li>
                    <li>Grid</li>
                </ul>
            </li>
            <li>JavaScript</li>
        </ul>
    </li>
    <li>Бэкенд технологии
        <ol>
            <li>Node.js</li>
            <li>Python</li>
            <li>PHP</li>
        </ol>
    </li>
</ul>`,
      },
    },

    {
      id: "slide-26",
      title: "Списки определений",
      type: "code",
      content:
        "Списки определений используются для создания пар термин-определение.",
      codeExample: {
        language: "html",
        title: "Списки определений",
        code: `<dl>
    <dt>HTML</dt>
    <dd>Язык разметки гипертекста для создания веб-страниц</dd>
    
    <dt>CSS</dt>
    <dd>Каскадные таблицы стилей для оформления веб-страниц</dd>
    
    <dt>JavaScript</dt>
    <dd>Язык программирования для создания интерактивных веб-страниц</dd>
    
    <!-- Один термин - несколько определений -->
    <dt>Веб-разработка</dt>
    <dd>Процесс создания веб-сайтов</dd>
    <dd>Включает фронтенд и бэкенд разработку</dd>
    
    <!-- Несколько терминов - одно определение -->
    <dt>Frontend</dt>
    <dt>Фронтенд</dt>
    <dd>Клиентская часть веб-приложения</dd>
</dl>`,
      },
    },

    {
      id: "slide-35",
      title: "Назначение и важность таблиц",
      type: "content",
      content:
        "HTML таблицы предназначены исключительно для представления табличных данных:\n\n**Правильное использование таблиц:**\n• Финансовые отчеты и статистика\n• Сравнительные данные\n• Расписания и календари\n• Результаты исследований\n• Любые данные в строках и столбцах\n\n**Структурные элементы таблицы:**\n• **<table>** - контейнер таблицы\n• **<thead>** - заголовок таблицы\n• **<tbody>** - тело таблицы\n• **<tfoot>** - подвал таблицы\n• **<tr>** - строка\n• **<th>** - ячейка заголовка\n• **<td>** - ячейка данных\n• **<caption>** - название таблицы\n\n**Важно:** Никогда не используйте таблицы для макета страницы! Это устаревшая практика.\n\n**Веб-доступность:** Правильная структура таблиц критически важна для программ чтения с экрана.",
    },

    {
      id: "slide-36",
      title: "Таблицы в HTML - введение",
      type: "content",
      content:
        "HTML таблицы используются для отображения табличных данных - информации, которая логически представляется в виде строк и столбцов.\n\nОсновные элементы таблицы:\n• <table> - контейнер для таблицы\n• <tr> - строка таблицы (table row)\n• <td> - ячейка данных (table data)\n• <th> - заголовочная ячейка (table header)\n• <thead> - группа заголовочных строк\n• <tbody> - группа строк тела таблицы\n• <tfoot> - группа строк подвала таблицы\n• <caption> - заголовок таблицы",
    },

    {
      id: "slide-28",
      title: "Базовая структура таблицы",
      type: "code",
      content: "Создание простой таблицы с заголовками и данными.",
      codeExample: {
        language: "html",
        title: "Простая таблица",
        code: `<table>
    <caption>Результаты экзаменов</caption>
    
    <thead>
        <tr>
            <th>Студент</th>
            <th>Предмет</th>
            <th>Оценка</th>
        </tr>
    </thead>
    
    <tbody>
        <tr>
            <td>Иванов И.И.</td>
            <td>Математика</td>
            <td>5</td>
        </tr>
        <tr>
            <td>Петров П.П.</td>
            <td>Физика</td>
            <td>4</td>
        </tr>
        <tr>
            <td>Сидоров С.С.</td>
            <td>Химия</td>
            <td>3</td>
        </tr>
    </tbody>
</table>`,
      },
    },

    {
      id: "slide-29",
      title: "Объединение ячеек таблицы",
      type: "code",
      content:
        "Использование атрибутов colspan и rowspan для объединения ячеек.",
      codeExample: {
        language: "html",
        title: "Объединение ячеек",
        code: `<table border="1">
    <tr>
        <th colspan="3">Квартальный отчет</th>
    </tr>
    <tr>
        <th>Месяц</th>
        <th>Доходы</th>
        <th>Расходы</th>
    </tr>
    <tr>
        <td>Январь</td>
        <td>100000</td>
        <td rowspan="2">50000</td>
    </tr>
    <tr>
        <td>Февраль</td>
        <td>120000</td>
        <!-- ячейка пропущена из-за rowspan -->
    </tr>
    <tr>
        <td>Март</td>
        <td>150000</td>
        <td>60000</td>
    </tr>
    <tr>
        <td colspan="2">Итого доходов: 370000</td>
        <td>Итого расходов: 110000</td>
    </tr>
</table>`,
      },
    },

    {
      id: "slide-40",
      title: "Назначение и важность HTML форм",
      type: "content",
      content:
        "HTML формы являются основным механизмом взаимодействия пользователя с веб-приложениями:\n\n**Основные функции форм:**\n• Сбор пользовательских данных\n• Регистрация и авторизация\n• Обратная связь и контакты\n• Поиск по сайту\n• Онлайн-покупки и заказы\n• Опросы и анкеты\n\n**Ключевые элементы:**\n• **<form>** - контейнер формы с настройками отправки\n• **<input>** - различные поля ввода\n• **<textarea>** - многострочный текст\n• **<select>** - выпадающие списки\n• **<button>** - кнопки действий\n• **<label>** - подписи к полям\n• **<fieldset>** - группировка полей\n\n**Важность для UX:**\n• Правильная структура улучшает удобство использования\n• Валидация предотвращает ошибки\n• Веб-доступность для всех пользователей\n• Семантическая разметка помогает браузерам",
    },

    {
      id: "slide-41",
      title: "Формы в HTML - введение",
      type: "content",
      content:
        "HTML формы используются для сбора пользовательского ввода. Форма может содержать элементы ввода, такие как текстовые поля, чекбоксы, радиокнопки, кнопки отправки и многое другое.\n\nОсновные элементы форм:\n• <form> - контейнер формы\n• <input> - поле ввода\n• <textarea> - многострочное текстовое поле\n• <select> - выпадающий список\n• <option> - вариант в выпадающем списке\n• <button> - кнопка\n• <label> - метка для элемента формы\n• <fieldset> - группировка элементов формы\n• <legend> - заголовок для fieldset",
    },

    {
      id: "slide-31",
      title: "Элемент form и его атрибуты",
      type: "code",
      content: "Создание контейнера формы с основными атрибутами.",
      codeExample: {
        language: "html",
        title: "Структура формы",
        code: `<!-- Базовая форма -->
<form action="/submit" method="POST">
    <!-- Элементы формы -->
</form>

<!-- Форма с дополнительными атрибутами -->
<form action="/contact" 
      method="POST" 
      enctype="multipart/form-data"
      target="_blank"
      autocomplete="on"
      novalidate>
    
    <!-- Поля формы -->
    
</form>

<!-- Форма для поиска -->
<form action="/search" method="GET">
    <input type="search" name="query" placeholder="Поиск...">
    <button type="submit">Найти</button>
</form>`,
      },
    },

    {
      id: "slide-32",
      title: "Элемент input - типы полей ввода",
      type: "code",
      content: "Различные типы полей ввода для сбора разных видов информации.",
      codeExample: {
        language: "html",
        title: "Типы input полей",
        code: `<!-- Текстовые поля -->
<input type="text" name="username" placeholder="Имя пользователя">
<input type="password" name="password" placeholder="Пароль">
<input type="email" name="email" placeholder="email@example.com">
<input type="url" name="website" placeholder="https://example.com">
<input type="tel" name="phone" placeholder="+7 (123) 456-78-90">
<input type="search" name="query" placeholder="Поиск...">

<!-- Числовые поля -->
<input type="number" name="age" min="1" max="100" step="1">
<input type="range" name="volume" min="0" max="100" value="50">

<!-- Поля даты и времени -->
<input type="date" name="birthday">
<input type="time" name="appointment">
<input type="datetime-local" name="event">
<input type="month" name="period">
<input type="week" name="week">`,
      },
    },

    {
      id: "slide-33",
      title: "Чекбоксы, радиокнопки и файлы",
      type: "code",
      content: "Специальные типы полей для выбора опций и загрузки файлов.",
      codeExample: {
        language: "html",
        title: "Специальные поля ввода",
        code: `<!-- Чекбоксы -->
<input type="checkbox" id="agree" name="agree" value="yes">
<label for="agree">Согласен с условиями</label>

<input type="checkbox" id="news" name="subscribe" value="newsletter" checked>
<label for="news">Подписаться на новости</label>

<!-- Радиокнопки -->
<input type="radio" id="male" name="gender" value="male">
<label for="male">Мужской</label>

<input type="radio" id="female" name="gender" value="female">
<label for="female">Женский</label>

<!-- Загрузка файлов -->
<input type="file" name="avatar" accept="image/*">
<input type="file" name="documents" multiple accept=".pdf,.doc,.docx">

<!-- Скрытые поля -->
<input type="hidden" name="user_id" value="12345">`,
      },
    },

    {
      id: "slide-34",
      title: "Текстовые области и выпадающие списки",
      type: "code",
      content: "Элементы для ввода больших объемов текста и выбора из списков.",
      codeExample: {
        language: "html",
        title: "Текстовые области и списки",
        code: `<!-- Многострочное текстовое поле -->
<label for="message">Сообщение:</label>
<textarea id="message" 
          name="message" 
          rows="4" 
          cols="50" 
          placeholder="Введите ваше сообщение..."
          maxlength="500">
</textarea>

<!-- Выпадающий список -->
<label for="country">Страна:</label>
<select id="country" name="country">
    <option value="">Выберите страну</option>
    <option value="ru">Россия</option>
    <option value="us">США</option>
    <option value="de">Германия</option>
    <option value="fr" selected>Франция</option>
</select>

<!-- Множественный выбор -->
<label for="skills">Навыки:</label>
<select id="skills" name="skills" multiple size="4">
    <option value="html">HTML</option>
    <option value="css">CSS</option>
    <option value="js">JavaScript</option>
    <option value="php">PHP</option>
</select>`,
      },
    },

    {
      id: "slide-35",
      title: "Кнопки и группировка элементов формы",
      type: "code",
      content: "Создание кнопок и логическая группировка элементов формы.",
      codeExample: {
        language: "html",
        title: "Кнопки и группировка",
        code: `<!-- Различные типы кнопок -->
<button type="submit">Отправить</button>
<button type="reset">Очистить</button>
<button type="button" onclick="doSomething()">Выполнить действие</button>

<input type="submit" value="Отправить форму">
<input type="reset" value="Сбросить">
<input type="button" value="Кнопка" onclick="alert('Нажато!')">

<!-- Группировка элементов -->
<fieldset>
    <legend>Личная информация</legend>
    <label for="fname">Имя:</label>
    <input type="text" id="fname" name="firstname">
    
    <label for="lname">Фамилия:</label>
    <input type="text" id="lname" name="lastname">
</fieldset>

<fieldset>
    <legend>Контактная информация</legend>
    <label for="email">Email:</label>
    <input type="email" id="email" name="email">
    
    <label for="phone">Телефон:</label>
    <input type="tel" id="phone" name="phone">
</fieldset>`,
      },
    },

    {
      id: "slide-36",
      title: "Валидация форм в HTML5",
      type: "code",
      content:
        "Встроенные возможности HTML5 для валидации пользовательского ввода.",
      codeExample: {
        language: "html",
        title: "Валидация форм",
        code: `<form>
    <!-- Обязательное поле -->
    <input type="text" name="username" required 
           placeholder="Обязательное поле">
    
    <!-- Ограничение длины -->
    <input type="password" name="password" 
           minlength="8" maxlength="20" required
           placeholder="Пароль (8-20 символов)">
    
    <!-- Паттерн валидации -->
    <input type="text" name="phone" 
           pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}"
           placeholder="123-456-7890"
           title="Формат: 123-456-7890">
    
    <!-- Числовые ограничения -->
    <input type="number" name="age" 
           min="18" max="100" step="1"
           placeholder="Возраст (18-100)">
    
    <!-- Автофокус -->
    <input type="text" name="focus_field" autofocus>
    
    <!-- Отключение автозаполнения -->
    <input type="text" name="no_autocomplete" autocomplete="off">
    
    <button type="submit">Отправить</button>
</form>`,
      },
    },

    {
      id: "slide-47",
      title: "Назначение контейнеров div и span",
      type: "content",
      content:
        "Элементы <div> и <span> являются универсальными контейнерами без семантического значения:\n\n**Элемент <div> (блочный):**\n• Группировка блочных элементов\n• Создание макета страницы\n• Стилизация через CSS классы\n• Контейнер для секций контента\n• Основа для CSS Grid и Flexbox\n• Занимает всю доступную ширину\n\n**Элемент <span> (строчный):**\n• Группировка строчных элементов\n• Стилизация частей текста\n• Применение CSS к отдельным словам\n• Не нарушает потока текста\n• Занимает только необходимое пространство\n\n**Когда использовать:**\n• Только когда нет подходящего семантического элемента\n• Для стилизации и группировки\n• Как последний вариант для разметки\n\n**Альтернативы:** section, article, header, nav - используйте семантические элементы, когда это возможно.",
    },

    {
      id: "slide-48",
      title: "Контейнеры div и span",
      type: "two-column",
      content:
        "Универсальные контейнеры для группировки и стилизации элементов",
      leftContent: {
        title: "div (блочный элемент)",
        items: [
          "Занимает всю доступную ширину",
          "Начинается с новой строки",
          "Может содержать любые элементы",
          "Используется для создания макета",
          "Группирует блоки контента",
          "Высота зависит от содержимого",
        ],
      },
      rightContent: {
        title: "span (строчный элемент)",
        items: [
          "Занимает только необходимую ширину",
          "Не создает перенос строки",
          "Содержит только строчные элементы",
          "Используется для стилизации текста",
          "Группирует части текста",
          "Размеры зависят от содержимого",
        ],
      },
    },

    {
      id: "slide-38",
      title: "Практические примеры div и span",
      type: "code",
      content:
        "Примеры использования универсальных контейнеров для создания структуры.",
      codeExample: {
        language: "html",
        title: "Использование div и span",
        code: `<!-- Структура страницы с div -->
<div class="header">
    <div class="logo">
        <img src="logo.png" alt="Логотип">
    </div>
    <div class="navigation">
        <a href="/">Главная</a>
        <a href="/about">О нас</a>
        <a href="/contact">Контакты</a>
    </div>
</div>

<div class="main-content">
    <div class="sidebar">
        <h3>Категории</h3>
        <ul>
            <li><a href="/news">Новости</a></li>
            <li><a href="/articles">Статьи</a></li>
        </ul>
    </div>
    
    <div class="content">
        <h1>Основной контент</h1>
        <p>Здесь размещается основная информация.</p>
    </div>
</div>

<!-- Использование span для стилизации -->
<p>Цена товара: <span class="price">1999 руб.</span></p>
<p>Статус заказа: <span class="status active">Активен</span></p>`,
      },
    },

    {
      id: "slide-50",
      title: "Назначение семантических элементов HTML5",
      type: "content",
      content:
        "HTML5 семантические элементы придают смысл структуре документа и заменяют бессмысленные div:\n\n**Основные преимущества:**\n• Улучшают веб-доступность для программ чтения с экрана\n• Помогают поисковым системам понимать контент\n• Делают код более читаемым для разработчиков\n• Упрощают стилизацию CSS\n• Поддерживают структурированные данные\n\n**Основные элементы и их назначение:**\n• **<header>** - шапка страницы/секции (логотип, навигация)\n• **<nav>** - навигационные ссылки\n• **<main>** - основной уникальный контент страницы\n• **<section>** - тематический раздел документа\n• **<article>** - независимая статья или пост\n• **<aside>** - дополнительная информация, сайдбар\n• **<footer>** - подвал с контактами, копирайтом\n• **<figure>** - иллюстрация с подписью\n• **<time>** - дата и время в машиночитаемом формате",
    },

    {
      id: "slide-51",
      title: "Семантические элементы HTML5",
      type: "content",
      content:
        "HTML5 введен множество семантических элементов, которые придают смысл структуре документа:\n\n• <header> - шапка страницы или секции\n• <nav> - навигационное меню\n• <main> - основное содержимое документа\n• <section> - тематический раздел контента\n• <article> - независимая статья или пост\n• <aside> - боковая панель или дополнительная информация\n• <footer> - подвал страницы или секции\n• <figure> - иллюстрация с подписью\n• <figcaption> - подпись к figure\n• <time> - дата или время\n• <address> - контактная информация",
    },

    {
      id: "slide-52",
      title: "Мультимедийные элементы HTML5",
      type: "content",
      content:
        "HTML5 предоставляет встроенные элементы для работы с аудио и видео:\n\n**Элемент <video>:**\n• Встраивание видеофайлов без плагинов\n• Поддержка нескольких форматов через <source>\n• Встроенные элементы управления\n• Автозапуск, зацикливание, постер\n• Доступность через субтитры <track>\n\n**Элемент <audio>:**\n• Воспроизведение аудиофайлов\n• Поддержка нескольких источников\n• Элементы управления воспроизведением\n• Фоновое аудио или с интерфейсом\n\n**Элемент <source>:**\n• Альтернативные источники медиа\n• Разные форматы для совместимости\n• Адаптивное качество медиа\n\n**Элемент <track>:**\n• Субтитры и описания для видео\n• Поддержка веб-доступности\n• Мультиязычность",
    },

    {
      id: "slide-53",
      title: "Примеры мультимедийных элементов",
      type: "code",
      content: "Практические примеры использования аудио и видео элементов.",
      codeExample: {
        language: "html",
        title: "Мультимедиа в HTML5",
        code: `<!-- Видео с элементами управления -->
<video width="640" height="480" controls poster="preview.jpg">
    <source src="movie.mp4" type="video/mp4">
    <source src="movie.webm" type="video/webm">
    <source src="movie.ogv" type="video/ogg">
    <track src="subtitles_ru.vtt" kind="subtitles" srclang="ru" label="Русский">
    <track src="subtitles_en.vtt" kind="subtitles" srclang="en" label="English">
    Ваш браузер не поддерживает видео.
</video>

<!-- Аудио плеер -->
<audio controls>
    <source src="audio.mp3" type="audio/mpeg">
    <source src="audio.ogg" type="audio/ogg">
    Ваш браузер не поддерживает аудио.
</audio>

<!-- Автозапуск видео (без звука) -->
<video autoplay muted loop>
    <source src="background.mp4" type="video/mp4">
</video>`,
      },
    },

    {
      id: "slide-54",
      title: "Интерактивные элементы HTML5",
      type: "content",
      content:
        "HTML5 включает элементы для создания интерактивных виджетов:\n\n**Элемент <details> и <summary>:**\n• Создание аккордеонов без JavaScript\n• Скрываемый/показываемый контент\n• Встроенная веб-доступность\n• Семантически правильные раскрывающиеся блоки\n\n**Элемент <dialog>:**\n• Модальные окна и диалоги\n• Встроенное управление фокусом\n• Веб-доступность по умолчанию\n• API для программного управления\n\n**Элемент <progress>:**\n• Индикаторы прогресса\n• Показ выполнения задач\n• Доступность для программ чтения с экрана\n\n**Элемент <meter>:**\n• Измерения в известном диапазоне\n• Проценты, оценки, использование диска\n• Семантически отличается от progress",
    },

    {
      id: "slide-55",
      title: "Примеры интерактивных элементов",
      type: "code",
      content: "Современные HTML5 элементы для интерактивности.",
      codeExample: {
        language: "html",
        title: "Интерактивные виджеты",
        code: `<!-- Раскрывающийся блок -->
<details>
    <summary>Нажмите, чтобы раскрыть</summary>
    <p>Скрытый контент, который показывается 
       при клике на summary.</p>
    <ul>
        <li>Элемент 1</li>
        <li>Элемент 2</li>
    </ul>
</details>

<!-- Модальное окно -->
<dialog id="my-dialog">
    <p>Содержимое модального окна</p>
    <button onclick="document.getElementById('my-dialog').close()">
        Закрыть
    </button>
</dialog>

<!-- Индикатор прогресса -->
<progress value="70" max="100">70%</progress>
<p>Загрузка: <progress value="0.7">70%</progress></p>

<!-- Измеритель -->
<meter value="0.8" min="0" max="1">80%</meter>
<p>Использование диска: <meter value="32" min="0" max="100">32GB из 100GB</meter></p>`,
      },
    },

    {
      id: "slide-56",
      title: "Дополнительные полезные HTML элементы",
      type: "content",
      content:
        "Менее известные, но полезные HTML элементы:\n\n**Элемент <datalist>:**\n• Предустановленные варианты для input\n• Автодополнение с возможностью ввода своего значения\n• Улучшает пользовательский опыт\n\n**Элемент <output>:**\n• Результат вычислений или действий пользователя\n• Семантически обозначает вывод\n• Связывается с элементами формы\n\n**Элемент <wbr>:**\n• Возможность переноса слова (Word Break Opportunity)\n• Для длинных URL или составных слов\n• Не добавляет дефис при переносе\n\n**Элемент <bdi> и <bdo>:**\n• Управление направлением текста\n• Важно для многоязычных сайтов\n• Работа с арабским, ивритом и другими RTL языками",
    },

    {
      id: "slide-57",
      title: "Примеры дополнительных элементов",
      type: "code",
      content: "Практические примеры менее известных HTML элементов.",
      codeExample: {
        language: "html",
        title: "Дополнительные HTML элементы",
        code: `<!-- Автодополнение с datalist -->
<input list="browsers" name="browser" placeholder="Выберите браузер">
<datalist id="browsers">
    <option value="Chrome">
    <option value="Firefox">
    <option value="Safari">
    <option value="Edge">
    <option value="Opera">
</datalist>

<!-- Результат вычислений -->
<form>
    <input type="range" id="a" value="50"> +
    <input type="number" id="b" value="25"> =
    <output name="result" for="a b">75</output>
</form>

<!-- Возможность переноса -->
<p>Адрес сайта: https://www.very-long-domain-name<wbr>.com/very-long-path<wbr>/file.html</p>

<!-- Направление текста -->
<p>Пользователь <bdi>Имя пользователя</bdi> вошел в систему.</p>
<p><bdo dir="rtl">Этот текст отображается справа налево</bdo></p>`,
      },
    },

    {
      id: "slide-58",
      title: "Итоги и рекомендации",
      type: "list",
      content: "Основные принципы работы с HTML:",
      items: [
        "Всегда используйте правильную структуру документа с DOCTYPE",
        "Соблюдайте семантику - выбирайте элементы по смыслу, а не по внешнему виду",
        "Используйте заголовки h1-h6 для создания иерархии контента",
        "Обязательно указывайте атрибут alt для всех изображений",
        "Связывайте метки label с элементами форм для улучшения доступности",
        "Валидируйте HTML код с помощью официального валидатора W3C",
        "Используйте осмысленные имена классов и идентификаторов",
        "Правильно вкладывайте элементы - блочные могут содержать строчные",
        "Закрывайте все парные теги и используйте правильный синтаксис",
        "Изучайте новые HTML5 элементы и возможности для современной разработки",
        "Предпочитайте семантические элементы универсальным div и span",
        "Используйте современные мультимедийные возможности HTML5",
      ],
    },
  ],
};
